{"version":3,"sources":["contexts/TaskContext.jsx","services/fetchApi.js","pages/Login/index.jsx","components/TaskInput.jsx","components/Task.jsx","pages/TaskList/index.jsx","routes/index.jsx","contexts/TaskProvider.jsx","App.js","reportWebVitals.js","index.js"],"names":["TaskContext","createContext","login","token","obj","axios","post","then","res","data","saveTask","task","deleteTask","delete","editTask","tasks","put","Login","useContext","isUserLogged","setIsUserLogged","setToken","setTasks","setUser","onSuccess","a","console","log","tokenId","dbRequest","error","alert","to","Container","className","clientId","process","buttonText","onFailure","cookiePolicy","isSignedIn","TaskInput","useState","localTask","setLocalTask","handleSubmit","Date","dia","getDate","toString","padStart","mes","getMonth","ano","getFullYear","formattedDate","name","date","status","id","type","value","onChange","target","htmlFor","icon","faCheckSquare","size","onClick","Task","editMode","setEditMode","handleDelete","filtered","filter","el","handleEdit","newTask","indexOfTask","indexOf","splice","EditComponent","Modal","show","onHide","Body","placeHolder","Footer","Button","variant","faEdit","faTrashAlt","TaskList","user","showCard","setShowCard","useEffect","timeId","setTimeout","clearTimeout","onLogoutSuccess","map","index","Toast","onClose","Header","src","picture","alt","Routes","exact","path","component","TaskProvider","children","context","Provider","App","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","basename","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.555d7f65.chunk.js","sourcesContent":["import { createContext } from 'react';\n\nconst TaskContext = createContext([]);\n\nexport default TaskContext;","import axios from \"axios\";\n\nexport function login(token) {\n  const URL = 'https://desafio-todo-list-backend.herokuapp.com/login';\n  const obj = {\n    token,\n  };\n  return axios.post(URL, obj).then((res) => res.data);\n}\n\nexport function saveTask(token, task) {\n  const URL = 'https://desafio-todo-list-backend.herokuapp.com/task';\n  const obj = {\n    token,\n    task,\n  };\n  return axios.post(URL, obj).then((res) => res.data);\n}\n\nexport function deleteTask(token, task) {\n  const URL = 'https://desafio-todo-list-backend.herokuapp.com/task';\n  const obj = {\n    data: {\n      token,\n      task,\n    },\n  };\n  return axios.delete(URL, obj).then((res) => res.data);\n}\n\nexport function editTask(token, tasks) {\n  const URL = 'https://desafio-todo-list-backend.herokuapp.com/task';\n  const obj = {\n    token,\n    tasks,\n  };\n  return axios.put(URL, obj).then((res) => res.data);\n}","import React, { useContext } from 'react';\nimport { Container } from 'react-bootstrap';\nimport { GoogleLogin } from 'react-google-login';\nimport { Redirect } from 'react-router-dom';\nimport TaskContext from '../../contexts/TaskContext';\nimport { login } from '../../services/fetchApi';\n\nexport default function Login() {\n  const {\n    isUserLogged,\n    setIsUserLogged,\n    setToken,\n    setTasks,\n    setUser,\n  } = useContext(TaskContext);\n  \n  const onSuccess = async (res) => {\n    console.log('succeed')\n    const { tokenId } = res;\n    const dbRequest = await login(tokenId);\n    if (dbRequest.error) alert('Usuário ou senha incorretos');\n    setUser(dbRequest);\n    setTasks(dbRequest.tasks);\n    setToken(tokenId);\n    setIsUserLogged(true);\n  }\n  \n  const onFailure = (res) => {\n    console.log('failed', res)\n    setIsUserLogged(false);\n  }\n\n  const redirectComponent = () => {\n    return (\n      <Redirect to=\"/taskList\" />\n    );\n  }\n\n  return ( isUserLogged? redirectComponent() : \n    <Container className=\"login-container pt-5\">\n      <div className=\"mx-auto text-center login-box\">\n        <h2 className=\"\">Login</h2>\n        <GoogleLogin\n          className=\"mt-4 mb-1 mx-auto google-btn\"\n          clientId={ process.env.REACT_APP_CLIENT_ID }\n          buttonText=\"Faça login\"\n          onSuccess={ onSuccess }\n          onFailure={ onFailure }\n          cookiePolicy={ 'single_host_origin' }\n          isSignedIn={ true }\n        />\n      </div>\n    </Container>\n  );\n}\n","import React, { useContext, useState } from 'react';\nimport TaskContext from '../contexts/TaskContext';\nimport { saveTask } from '../services/fetchApi';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faCheckSquare } from '@fortawesome/free-solid-svg-icons';\n\nexport default function TaskInput() {\n  const {\n    tasks,\n    setTasks,\n    token,\n  } = useContext(TaskContext);\n\n  const [localTask, setLocalTask] = useState('');\n\n  const handleChange = ({ target: { value } }) => {\n    setLocalTask(value);\n  }\n\n  const handleSubmit = async () => {\n    if (localTask === '') return alert('Insira uma tarefa');\n    const data = new Date();\n    const dia  = data.getDate().toString().padStart(2, '0');\n    const mes  = (data.getMonth()+1).toString().padStart(2, '0');\n    const ano  = data.getFullYear();\n    const formattedDate = `${dia}/${mes}/${ano}`;\n    const task = {\n      name: localTask,\n      date: formattedDate,\n      status: 'pendente',\n    }\n    await saveTask(token, task);\n    setTasks([...tasks, task]);\n    setLocalTask('');\n  };\n\n  return (\n    <>\n      <input\n        className=\"task-input form-control\"\n        id=\"input\"\n        type=\"text\"\n        value={ localTask }\n        name=\"task-input\"\n        onChange={ handleChange }\n      />\n      <label htmlFor=\"input\" className=\"form-label\" />\n      <FontAwesomeIcon\n        icon={ faCheckSquare }\n        size=\"4x\"\n        className=\"mx-3 p-2 icons\"\n        onClick={ handleSubmit }\n      />\n    </>\n  )\n}\n","import React, { useContext, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport TaskContext from '../contexts/TaskContext';\nimport { Modal, Button } from 'react-bootstrap';\nimport { deleteTask, editTask } from '../services/fetchApi';\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\nimport { faEdit, faTrashAlt } from '@fortawesome/free-solid-svg-icons';\n\nexport default function Task({ task }) {\n  const {\n    tasks,\n    setTasks,\n    token,\n  } = useContext(TaskContext);\n\n  const [editMode, setEditMode] = useState(false);\n\n  const handleDelete = async () => {\n    const filtered = tasks.filter((el) => el !== task);\n    setTasks(filtered);\n    console.log(token);\n    await deleteTask(token, task);\n  }\n\n  const handleEdit = async (name, status) => {\n    const newTask = {\n      name ,\n      date: task.date,\n      status: status === task.status? 'pendente' : status,\n    };\n    const indexOfTask = tasks.indexOf(task);\n    console.log(tasks);\n    tasks.splice(indexOfTask, 1, newTask);\n    setEditMode(!editMode);\n    setTasks([...tasks]);\n    await editTask(token, tasks)\n  }\n\n  const EditComponent = () => {\n    let name = task.name;\n    let status = task.status;\n    return (\n      <Modal show={ editMode } onHide={ () => setEditMode(!editMode) }>\n        <Modal.Body className=\"d-flex flex-column\">\n          <div className=\"d-flex pt-3 mx-auto text-muted\">\n            <p className=\"mx-2\">{ task.name }</p>\n            <p className=\"mx-2\">{ task.status }</p>\n            <p className=\"mx-2\">{ task.date }</p>\n          </div>\n          <div className=\"d-flex flex-column\">\n            <label htmlFor=\"inputEdit\" />\n            <input\n              className=\"my-2 form-control\"\n              id=\"inputEdit\"\n              placeHolder={ task.name }\n              type=\"text\"\n              onChange={ ({ target: { value } }) => name = value }\n            />\n            <select\n              name=\"taskStatus\"\n              className=\"my-2 form-select\"\n              onChange={ ({ target: { value } }) => status = value }\n            >\n              <option value=\"pendente\">pendente</option>\n              <option value=\"em andamento\">em andamento</option>\n              <option value=\"pronto\">pronto</option>\n            </select>\n            {/* <label htmlFor=\"dateEdit\" />\n            <input\n              className=\"my-2 form-control\"\n              type=\"date\"\n              id=\"dateEdit\"\n              name=\"taskDate\"\n              placeholder={ task.date }\n              onChange={ ({ target: { value } }) => date = value }\n            /> */}\n          </div>\n        </Modal.Body>\n        <Modal.Footer>\n          <Button variant=\"secondary\" onClick={ () => setEditMode(!editMode) }>\n            Close\n          </Button>\n          <Button\n            className=\"mx-2\"\n            onClick={ () => handleEdit(name, status) }\n          >\n            Salvar\n          </Button>\n        </Modal.Footer>\n      </Modal>\n    );\n  } \n\n  return ( editMode? <EditComponent /> :\n    <div className=\"d-flex my-2 align-items-center justify-content-between task\">\n      <span className=\"px-2\">{ task.name }</span>\n      <div className=\"d-flex align-items-center justify-content-around\">\n        <div className=\"d-flex flex-column\">\n          <span className=\"px-2 ms-auto\"><strong>{ task.status }</strong></span>\n          <span className=\"px-2 ms-auto\">{ task.date }</span>\n        </div>\n        <div className=\"mx-auto ms-2 d-flex flex-column align-items-center\">\n          <FontAwesomeIcon\n            icon={ faEdit }\n            className=\"icons my-1\"\n            onClick={ () => setEditMode(!editMode) }\n          />\n          <FontAwesomeIcon \n            icon={ faTrashAlt }\n            className=\"mx-2 icons my-1\"\n            onClick={ handleDelete }\n          />\n        </div>\n      </div>\n    </div>\n  );\n}\n\nTask.propTypes = {\n  task: PropTypes.shape({\n    name: PropTypes.string,\n    date: PropTypes.string,\n    status: PropTypes.string,\n  }),\n};","import React, { useContext, useState, useEffect } from 'react';\nimport { Container, Toast } from 'react-bootstrap';\nimport { GoogleLogout } from 'react-google-login';\nimport { Redirect } from 'react-router-dom';\nimport TaskContext from '../../contexts/TaskContext';\nimport TaskInput from '../../components/TaskInput';\nimport Task from '../../components/Task';\n\nexport default function TaskList() {\n  const {\n    isUserLogged,\n    setIsUserLogged,\n    tasks,\n    user,\n  } = useContext(TaskContext);\n\n  const [showCard, setShowCard] = useState(false);\n\n  useEffect(() => {\n    const timeId = setTimeout(() => {\n      setShowCard(true)\n    }, 2000)\n\n    return () => {\n      clearTimeout(timeId)\n    }\n  }, []);\n\n  const onSuccess = () => {\n    console.log('Loged out successfuly')\n    setIsUserLogged(false);\n  }\n\n  const redirectComponent = () => (\n    <Redirect to=\"/\" />\n  );\n\n  return ( !isUserLogged? redirectComponent() :\n    <Container className=\"py-5 d-flex flex-column\">\n      <div className=\"ms-auto\">\n        <GoogleLogout\n          clientId={ process.env.REACT_APP_CLIENT_ID }\n          buttonText=\"Logout\"\n          onLogoutSuccess={onSuccess}\n        />\n      </div>\n      <div className=\"mx-auto\">\n        <h1>\n          Todo list\n        </h1>\n      </div>\n      <div className=\"mx-auto mt-3 d-flex align-items-center\">\n        <TaskInput />\n      </div>\n      <div className=\"mx-auto\">\n\n      </div>\n      <div className=\"mx-auto mt-3\">\n        {\n          tasks.map((task, index) => <Task key={ index } task={ task } />)\n        }\n      </div>\n      <div className=\"position-absolute bottom-0 end-0 m-5 me-5\">\n        <Toast className=\"toast\" show={ showCard } onClose={ () => setShowCard(!showCard) }>\n          <Toast.Header>\n            <img src={ user.picture } className=\"rounded me-2\" alt=\"Toast\" />\n            <strong className=\"me-auto\">Olá, { user.name }</strong>\n          </Toast.Header>\n          <Toast.Body><strong>Como está o seu dia? #vqv</strong></Toast.Body>\n        </Toast>\n      </div>\n    </Container>\n  );\n}\n","import React from 'react'\nimport { Switch, Route } from 'react-router-dom';\nimport Login from '../pages/Login';\nimport TaskList from '../pages/TaskList';\n\nexport default function Routes() {\n  return (\n    <Switch>\n      <Route exact path = \"/\" component = { Login } />\n      <Route path=\"/taskList\" component={ TaskList } />\n    </Switch>\n  )\n}\n","import React, { useState } from 'react'\nimport TaskContext from './TaskContext';\n\nexport default function TaskProvider({ children }) {\n  const [isUserLogged, setIsUserLogged] = useState(false);\n  const [tasks, setTasks] = useState([]);\n  const [token, setToken] = useState('');\n  const [user, setUser] = useState({});\n\n  const context = {\n    isUserLogged,\n    tasks,\n    token,\n    user,\n    setIsUserLogged,\n    setTasks,\n    setToken,\n    setUser,\n  }\n\n  return (\n    <TaskContext.Provider value={ context }>\n      { children }\n    </TaskContext.Provider>\n  )\n}\n","import React from 'react';\nimport './App.css';\nimport 'bootstrap/dist/css/bootstrap.min.css';\nimport Routes from './routes';\nimport TaskProvider from './contexts/TaskProvider';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TaskProvider>\n        <Routes />\n      </TaskProvider>\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\nimport { HashRouter } from 'react-router-dom'\n\nReactDOM.render(\n  <HashRouter basename='/frontend-todo-list'>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </HashRouter>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}